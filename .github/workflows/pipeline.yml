name: pipeline

on:
  push:

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: 17
        architecture: x64
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
        aws-access-key-id: ${{ secrets.AWS_DYNAMODB_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_DYNAMODB_ACCESS_SECRET }}
        aws-dynamo-session-token: ${{ secrets.AWS_DYNAMODB_SESSION_TOKEN }}
        aws-region: us-east-1
    
    - name: Install kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'v1.28.2'
      id: install

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID_ORG }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY_ORG }}
        aws-region: us-east-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Build, Tag, and Push the Image to Amazon ECR
      id: build-image
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: pagamento-postech-repository
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
        docker push -a $ECR_REGISTRY/$ECR_REPOSITORY
        
    - name: Analyze with SonarCloud
      uses: docker:dind
#      variables:
#        LOCAL_STACK_HOST: 172.17.0.1
#        DOCKER_HOST: "tcp://docker:2375"
#        DOCKER_TLS_CERTDIR: ""
#        DOCKER_DRIVER: overlay2
      run: mvn -B verify sonar:sonar -Dsonar.projectKey=soat3-g35_postech-fase-4-pagamento-app -Dsonar.organization=soat3-g35 -Dsonar.host.url=https://sonarcloud.io -Dsonar.login=$SONAR_TOKEN
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        
    - name: Update Kube File
      run: aws eks update-kubeconfig --name g35-eks-cluster

    - name: Deploy to EKS
      run: |
        kubectl apply -f k8s/deployment.yaml
